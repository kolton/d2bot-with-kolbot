/***	@filename	Questing.js*	@author		kolton*	@desc		Do quests, only most popular ones for now*/function Questing() {	var i, j,		quests = [			[1, "clearDen"],			[9, "killRadament"],			[17, "lamEssen"],			[25, "killIzual"],			[35, "killShenk"],			[37, "freeAnya"]		];	this.checkQuest = function (id, state) {		sendPacket(1, 0x40);		delay(500);		return me.getQuest(id, state);	};	this.clearDen = function () {		print("starting den");		var akara;		if (!Town.goToTown(1) || !Pather.moveToExit([Areas.Act1.Blood_Moor, Areas.Act1.Den_Of_Evil], true)) {			throw new Error();		}		Precast.doPrecast(true);		Attack.clearLevel();		Town.goToTown();		Town.move("akara");		akara = getUnit(UnitType.NPC, "akara");		akara.openMenu();		me.cancel();		return true;	};	this.killRadament = function () {		if (!Pather.accessToAct(2)) {			return false;		}		print("starting radament");		var book, atma;		if (!Town.goToTown() || !Pather.useWaypoint(Areas.Act2.A2_Sewers_Level_2, true)) {			throw new Error();		}		Precast.doPrecast(true);		if (!Pather.moveToExit(Areas.Act2.A2_Sewers_Level_3, true) || !Pather.moveToPreset(me.area, UnitType.Object, UniqueObjectIds.Horadric_Scroll_Chest)) {			throw new Error();		}		Attack.kill(UnitClassID.radament); // Radament		book = getUnit(UnitType.Item, ItemClassIds.Book_Of_Skill);		if (book) {			Pickit.pickItem(book);			delay(300);			clickItem(ClickType.Right_Click, book);		}		Town.goToTown();		Town.move("atma");		atma = getUnit(UnitType.NPC, "atma");		atma.openMenu();		me.cancel();		return true;	};	this.killIzual = function () {		if (!Pather.accessToAct(4)) {			return false;		}		print("starting izual");		var tyrael;		if (!Town.goToTown() || !Pather.useWaypoint(Areas.Act4.City_Of_The_Damned, true)) {			throw new Error();		}		Precast.doPrecast(true);		if (!Pather.moveToPreset(Areas.Act4.Plains_Of_Despair, UnitType.NPC, UnitClassID.izual)) {			return false;		}		Attack.kill(UnitClassID.izual); // Izual		Town.goToTown();		Town.move("tyrael");		tyrael = getUnit(UnitType.NPC, "tyrael");		tyrael.openMenu();		me.cancel();		if (getUnit(UnitType.Object, UniqueObjectIds.Harrogath_LastPortal)) {			Pather.useUnit(UnitType.Object, UniqueObjectIds.Harrogath_LastPortal, Areas.Act5.Harrogath);		}		return true;	};	this.lamEssen = function () {		if (!Pather.accessToAct(3)) {			return false;		}		print("starting lam essen");		var stand, book, alkor;		if (!Town.goToTown() || !Pather.useWaypoint(Areas.Act3.Kurast_Bazaar, true)) {			throw new Error();		}		Precast.doPrecast(true);		if (!Pather.moveToExit(Areas.Act3.Ruined_Temple, true) || !Pather.moveToPreset(me.area, UnitType.Object, UniqueObjectIds.Lam_Esens_Tome)) {			throw new Error();		}		stand = getUnit(UnitType.Object, UniqueObjectIds.Lam_Esens_Tome);		Misc.openChest(stand);		delay(300);		book = getUnit(UnitType.Item, ItemClassIds.Lam_Esens_Tome);		Pickit.pickItem(book);		Town.goToTown();		Town.move("alkor");		alkor = getUnit(UnitType.NPC, "alkor");		alkor.openMenu();		me.cancel();		return true;	};	this.killShenk = function () {		if (!Pather.accessToAct(5)) {			return false;		}		if (this.checkQuest(Quests.Act5.Seige_on_Haggorath, 1)) {			return true;		}		print("starting shenk");		if (!Town.goToTown() || !Pather.useWaypoint(Areas.Act5.Frigid_Highlands, true)) {			throw new Error();		}		Precast.doPrecast(true);		Pather.moveTo(3883, 5113);		Attack.kill(getLocaleString(22435)); // Shenk the Overseer		Town.goToTown();		return true;	};	this.freeAnya = function () {		if (!Pather.accessToAct(5)) {			return false;		}		if (this.checkQuest(Quests.Act5.Prison_of_Ice, 1)) {			return true;		}		print("starting anya");		var anya, malah, scroll;		if (!Town.goToTown() || !Pather.useWaypoint(Areas.Act5.Crystalized_Passage, true)) {			throw new Error();		}		Precast.doPrecast(true);		if (!Pather.moveToExit(Areas.Act5.Frozen_River, true) || !Pather.moveToPreset(me.area, UnitType.Object, UniqueObjectIds.Drehya_Outside_Town)) {			throw new Error();		}		delay(1000);		anya = getUnit(UnitType.Object, UniqueObjectIds.Frozen_Anya);		Pather.moveToUnit(anya);		//anya.interact();		sendPacket(1, 0x13, 4, 0x2, 4, anya.gid);		delay(300);		me.cancel();		Town.goToTown();		Town.move("malah");		malah = getUnit(UnitType.NPC, "malah");		malah.openMenu();		me.cancel();		Town.move("portalspot");		Pather.usePortal(Areas.Act5.Frozen_River, me.name);		anya.interact();		delay(300);		me.cancel();		Town.goToTown();		Town.move("malah");		malah.openMenu();		me.cancel();		delay(500);		scroll = me.getItem(ItemClassIds.Scroll_Of_Resistance);		if (scroll) {			clickItem(ClickType.Right_Click, scroll);		}		return true;	};	for (i = 0; i < quests.length; i += 1) {		if (me.inTown) {			Town.doChores();		}		for (j = 0; j < 3; j += 1) {			if (!this.checkQuest(quests[i][0], 0)) {				try {					if (this[quests[i][1]]()) {						break;					}				} catch (e) {				}			} else {				break;			}		}		if (j === 3) {			D2Bot.printToConsole("Quest " + quests[i][1] + " failed.");		}	}	D2Bot.printToConsole("All quests done. Stopping profile.");	D2Bot.stop();	return true;}