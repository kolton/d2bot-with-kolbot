// default.dbj gets executed upon gamejoin
js_strict(true);

include("json2.js");
include("NTItemParser.dbl");
include("OOG.js");
include("Gambling.js");
include("common/Attack.js");
include("common/Cubing.js");
include("common/Config.js");
include("common/Loader.js");
include("common/Misc.js");
include("common/Pickit.js");
include("common/Pather.js");
include("common/Precast.js");
include("common/Prototypes.js");
include("common/Runewords.js");
include("common/Storage.js");
include("common/Town.js");

function main() {
	while (!me.gameReady) {
		delay(100);
	}

	var i, sojPause,
		sojCounter = 0,
		startTime = getTickCount();

	function DCloneEvent(mode, param1, param2, name1, name2) {
		switch (mode) {
		case 17: // 0x11 - "%Param1 Stones of Jordan Sold to Merchants"
			if (!Config.WaitForSoJ) {
				break;
			}

			D2Bot.printToConsole(param1 + " Stones of Jordan Sold to Merchants;7");
			sojPause = true;
			sojCounter = 0;

			break;
		case 18: // 0x12 - "Diablo Walks the Earth"
			if (!Config.StopOnDClone) {
				break;
			}

			D2Bot.printToConsole("Diablo Walks the Earth;7");
			removeEventListener("gameevent", DCloneEvent);
			scriptBroadcast("dclone");

			break;
		}
	}

	// If game name is a part of Gambling System, don't load scripts
	if (Gambling.goldFinders.indexOf(me.profile) > -1) {
		for (i = 0; i < Gambling.gambleGames.length; i += 1) {
			if (me.gamename.match(Gambling.gambleGames[i])) {
				Gambling.dropGold();
				DataFile.updateStats("gold");
				delay(5000);
				quit();
			}
		}
	}

	if (me.getStat(13) < DataFile.getStats().experience) { // check for experience decrease -> log death
		D2Bot.printToConsole("You died in last game;1");
		D2Bot.printToConsole("Experience decreased by " + (DataFile.getStats().experience - me.getStat(13)) + ";1");
		DataFile.updateDeaths();
	}

	DataFile.updateStats("experience", me.getStat(13));

	// Initialize libs - load config variables, build pickit list, attacks, containers and cubing and runeword recipes
	Config.init(true);
	Pickit.init();
	Attack.init();
	Storage.Init();
	Cubing.init();
	Runewords.init();

	// Load events and threads
	addEventListener("gameevent", DCloneEvent);
	load("tools/ToolsThread.js");

	if (Config.PublicMode) {
		load("tools/Party.js");
	}

	// One time maintenance - get corpse, clear leftover items, pick items in case anything important was dropped
	Town.getCorpse();
	Town.clearBelt();
	Town.clearInventory();
	Pickit.pickItems();

	// Go
	Loader.init();

	if (Config.MinGameTime && getTickCount() - startTime < Config.MinGameTime * 1000 && Town.goToTown()) {
		Town.goToTown();

		while (getTickCount() - startTime < Config.MinGameTime * 1000) {
			me.overhead("Stalling for " + Math.round(((startTime + (Config.MinGameTime * 1000)) - getTickCount()) / 1000) + " Seconds");
			delay(1000);
		}
	}

	print("ÿc8Run duration ÿc2" + ((getTickCount() - startTime) / 1000));
	delay(500);

	if (Config.LogExperience) {
		D2Bot.printToConsole("Exp gained: " + (me.getStat(13) - DataFile.getStats().experience) + ";2");
	}

	if (sojPause) {
		Town.goToTown();

		me.maxgametime = 0;

		while (sojCounter < Config.SoJWaitTime) {
			me.overhead("Waiting for SoJ sales... " + (Config.SoJWaitTime - sojCounter) + " min");
			delay(6e4);

			sojCounter += 1;
		}
	}

	DataFile.updateStats("gold");
	quit();
}